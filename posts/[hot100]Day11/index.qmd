---
title: "Day11"
date: 2025/03/09
categories: [刷题, 算法]
description: "介绍有关线性表中数组部分的分发糖果"
---

# 分发糖果

![](images/paste-1.png)

::: callout-note
# 分析

左右各扫一遍，只要比前一个（后一个）大就得保证不小于当前递增列表的糖果树后在基础值上加一。
:::

::: panel-tabset
# Python

``` python
class Solution:
    def candy(self, ratings: List[int]) -> int:
        n = len(ratings)
        base = 1
        increment = [0] * n
        for i in range(1, n):
            if ratings[i] > ratings[i-1]:
                increment[i] = max(base, increment[i])
                base += 1
            else: base = 1
        base = 1
        for i in range(n-2, -1, -1):
            if ratings[i] > ratings[i+1]:
                increment[i] = max(base, increment[i])
                base += 1
            else: base = 1
        return sum(increment) + n
```

# C++

``` cpp
class Solution {
public:
    int candy(vector<int>& ratings) {
        const int n = ratings.size();
        vector<int> increment(n);

        for (int i = 1, inc = 1; i < n; i++) {
            if (ratings[i] > ratings[i-1]) increment[i] = max(inc++, increment[i]);
            else inc = 1;
        }

        for (int i = n - 2, inc = 1; i>=0; i--) {
            if (ratings[i] > ratings[i + 1]) increment[i] = max(inc++, increment[i]);
            else inc = 1;
        }
        return accumulate(&increment[0], &increment[0] + n, n);  // <1>
    }
};
```

1.  accumulate(begin, end, init)：begin为数值开始的地址，end为结束，init为累加前的初始值
:::