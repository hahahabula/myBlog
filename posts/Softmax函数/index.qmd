---
title: "Softmax函数"
date: 2025/2/23
categories: [机器学习]
description: "介绍Softmax函数"
---

Softmax函数将K维实向量转化为拥有K个可能结果的概率分布列。它是Logistic回归的多维推广，常用作神经网络最后的激活函数，用以归一化神经网络的输出结果，形成概率分布。

# 定义

Softmax函数的定义为： $\sigma:\mathcal{R}^k\to(0,1)^K$，具体形式如下式：

$$
\sigma(z)_i=\frac{e^{z_i}}{\sum_{j=1}^Ke^{z_j}}
$$

```{python}
#| echo: false
import matplotlib.pyplot as plt
import numpy as np
import plotly.express as px
import plotly.graph_objects as go
# 初始化数据
data = list(range(1, 11))
# 定义Softmax函数
def Softmax(b: float) -> list:
    e_data = [b**i for i in data]
    return [i/sum(e_data) for i in e_data]

b_values = np.linspace(0.1, 1, 10)
b_values = np.append(b_values, np.linspace(1, 10, 10), axis=0)
p = np.array([Softmax(i) for i in b_values])
frames = [go.Frame(data=[go.Bar(x=data, y=p[i])],
                   name=f"b={b_values[i]:.2f}") for i in range(len(b_values))]
# 创建初始图形
fig = go.Figure(
    data=go.Bar(x=data, y=p[0]),
    layout=go.Layout(
        yaxis=dict(range=[0, 1], autorange=False),
        title='Softmax函数基底变化',
        updatemenus=[dict(
            type="buttons",
            buttons=[dict(label="开始",
                          method="animate",
                          args=[None, {"frame": {"duration": 0, "redraw": True}, "fromcurrent": True, "mode": "immediate"}]),
                          dict(label="暂停", method="animate", args=[[None], dict(frame=dict(duration=0, redraw=False), mode='immediate', transition=dict(duration=0))])]
        )],
        sliders=[dict(
        steps=[dict(method="animate", args=[[f.name], dict(mode="immediate", frame=dict(duration=0, redraw=True), transition=dict(duration=0))], label=f"b={b_values[i]:.2f}") for i, f in enumerate(frames)],
        currentvalue={"prefix": "基底b: ", "visible": True, "xanchor": "center"},
        pad={"b": 10},
        len=0.9,
        x=0.1,
        y=0.01)]
    ),
    frames=frames
)

fig.show()
```

由以上动画可得，当基底 $b\in(0,1)$ 时，$b$ 越小分布越尖，而当 $b\in(1,+\infty)$ 时， $b$ 越大分布越尖。

# 应用

Softmax函数用于多种多分类方法中


